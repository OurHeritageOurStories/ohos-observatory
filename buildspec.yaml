version: 0.2

phases:
  install:

    commands:
        # Setup Docker host 
        - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
        - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
        
        # Download code repo 
        - git config --global credential.helper store
        - echo git user $git_user
        - cd /home
        - git clone --single-branch -b ${git_branch} https://$git_user:${git_password}@github.com/nationalarchives/ohos-observatory.git


  build:
    commands:
    
        - echo Running the build __...
        
        - pwd
        - cd ohos-observatory
        - pwd  
        - cat dockerfile
        
        - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 259004456259.dkr.ecr.eu-west-2.amazonaws.com
        - docker images -a

        # Build vue-frontend Docker image and push to ECR with latest tag
        - docker build -t ohos_observatory_frontend .
        - docker images -a
        - docker tag ohos_observatory_frontend:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/ohos-observatory-frontend:latest
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/ohos-observatory-frontend:latest
        
         # Build vue frontend Docker image and push to ECR with build tag
        - docker images -a
        - docker tag ohos_observatory_frontend:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/ohos-observatory-frontend:v_${CODEBUILD_BUILD_NUMBER}
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/ohos-observatory-frontend:v_${CODEBUILD_BUILD_NUMBER}

 
        - pwd
        - cd GO_Api
        - pwd  
        - cat dockerfile
        
        - docker images -a

        # Build go-api Docker image and push to ECR with latest tag
        - docker build -t go_api .
        - docker images -a
        - docker tag go_api:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/go-api:latest
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/go-api:latest
        
         # Build go-api Docker image and push to ECR with build tag
        - docker images -a
        - docker tag go_api:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/go-api:v_${CODEBUILD_BUILD_NUMBER}
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/go-api:v_${CODEBUILD_BUILD_NUMBER}
        - docker ps 
       
        - pwd
        - cd ../observatory_react/ohos_observatory
        - pwd  
        - cat dockerfile
        
        - docker images -a

        # Build react-frontend Docker image and push to ECR with latest tag
        - docker build -t react_frontend .
        - docker images -a
        - docker tag react_frontend:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/react-frontend:latest
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/react-frontend:latest
        
         # Build react-frontend Docker image and push to ECR with build tag
        - docker images -a
        - docker tag react_frontend:latest 259004456259.dkr.ecr.eu-west-2.amazonaws.com/react-frontend:v_${CODEBUILD_BUILD_NUMBER}
        - docker push 259004456259.dkr.ecr.eu-west-2.amazonaws.com/react-frontend:v_${CODEBUILD_BUILD_NUMBER}
        - docker ps 
        
  post_build:
    commands:
        - echo ____Build status = $CODEBUILD_BUILD_SUCCEEDING @ `date`____........
        
        - chmod +x slack-alert.sh
        - |
          if expr "${CODEBUILD_BUILD_SUCCEEDING}" : "1" >/dev/null; then
            echo Build succeeded____........
            result_str="SUCCEEDED"
          fi
        - |
          if expr "${CODEBUILD_BUILD_SUCCEEDING}" : "0" >/dev/null; then
            echo Build Failed____........
            result_str="FAILED"
          fi
        - date_str=`date`

        - cburl="https://eu-west-2.console.aws.amazon.com/codesuite/codebuild/259004456259/projects/docker-build-image-pipeline-ohos-observatory/build/${CODEBUILD_BUILD_ID}"
        - slack_str="OHOS_Observatory_Frontend_Docker__v_${CODEBUILD_BUILD_NUMBER},_Build_Status_=_${result_str}_For_more_details_${cburl}"
        - echo $slack_str
        - ./slack-alert.sh $slack_str
        
        
