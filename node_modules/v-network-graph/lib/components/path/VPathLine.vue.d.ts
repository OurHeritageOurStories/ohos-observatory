import type { PathConfig, PathStrokeStyle } from '../../common/configs';
import type { LooseRequired } from '@vue/shared';
import type { EdgeObject } from '../../models/path';
import type { DefineComponent, ExtractPropTypes, Ref, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType } from 'vue';
import type { Path, PositionOrCurve } from '../../common/types';
declare const _sfc_main: DefineComponent<{
    points: {
        type: PropType<PositionOrCurve[]>;
        required: true;
    };
    path: {
        type: PropType<{
            id: string;
            selected: boolean;
            hovered: boolean;
            selectable: number | boolean;
            zIndex: number;
            clickable: boolean;
            hoverable: boolean;
            path: {
                [x: string]: any;
                id?: string | undefined;
                edges: string[];
            };
            edges: EdgeObject[];
        }>;
        required: true;
    };
}, {
    props: Readonly<LooseRequired<Readonly<ExtractPropTypes<{
        points: {
            type: PropType<PositionOrCurve[]>;
            required: true;
        };
        path: {
            type: PropType<{
                id: string;
                selected: boolean;
                hovered: boolean;
                selectable: number | boolean;
                zIndex: number;
                clickable: boolean;
                hoverable: boolean;
                path: {
                    [x: string]: any;
                    id?: string | undefined;
                    edges: string[];
                };
                edges: EdgeObject[];
            }>;
            required: true;
        };
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
    scale: Ref<number>;
    pathConfig: PathConfig<Path>;
    d: ComputedRef<string>;
    config: ComputedRef<PathStrokeStyle>;
    strokeDasharray: ComputedRef<string | number | undefined>;
    animationSpeed: ComputedRef<string | undefined>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    points: {
        type: PropType<PositionOrCurve[]>;
        required: true;
    };
    path: {
        type: PropType<{
            id: string;
            selected: boolean;
            hovered: boolean;
            selectable: number | boolean;
            zIndex: number;
            clickable: boolean;
            hoverable: boolean;
            path: {
                [x: string]: any;
                id?: string | undefined;
                edges: string[];
            };
            edges: EdgeObject[];
        }>;
        required: true;
    };
}>>, {}>;
export default _sfc_main;
