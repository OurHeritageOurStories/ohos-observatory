import type { LooseRequired } from '@vue/shared';
import type { DefineComponent, ExtractPropTypes, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType,  Ref } from 'vue';
import { LabelStyle } from '../../common/configs';
declare type Rect = {
    x: number;
    y: number;
    width: number;
    height: number;
};
declare const _sfc_main: DefineComponent<{
    text: {
        type: StringConstructor;
        required: true;
    };
    x: {
        type: NumberConstructor;
        required: true;
    };
    y: {
        type: NumberConstructor;
        required: true;
    };
    dominantBaseline: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    config: {
        type: PropType<LabelStyle>;
        required: true;
    };
}, {
    updateBackgroundPosition: (element: SVGTextElement, pos: Rect, transform: Ref<string | undefined>) => void;
    enableMutationObserver: (element: SVGTextElement, pos: Rect, transform: Ref<string | undefined>) => MutationObserver;
    props: Readonly<LooseRequired<Readonly<ExtractPropTypes<{
        text: {
            type: StringConstructor;
            required: true;
        };
        x: {
            type: NumberConstructor;
            required: true;
        };
        y: {
            type: NumberConstructor;
            required: true;
        };
        dominantBaseline: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        config: {
            type: PropType<LabelStyle>;
            required: true;
        };
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
    attrs: {
        [x: string]: unknown;
    };
    scale: Ref<number>;
    texts: ComputedRef<string[]>;
    fontSize: ComputedRef<number>;
    lineHeight: ComputedRef<number>;
    topDeltaY: ComputedRef<number>;
    element: Ref<SVGTextElement | undefined>;
    transform: Ref<string>;
    pos: {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    backgroundRectPos: ComputedRef<{
        x: number;
        y: number;
        width: number;
        height: number;
    }>;
    observer: MutationObserver | undefined;
    updateObserver: () => void;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    text: {
        type: StringConstructor;
        required: true;
    };
    x: {
        type: NumberConstructor;
        required: true;
    };
    y: {
        type: NumberConstructor;
        required: true;
    };
    dominantBaseline: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    config: {
        type: PropType<LabelStyle>;
        required: true;
    };
}>>, {
    dominantBaseline: string;
}>;
export default _sfc_main;
