import type { LooseRequired } from '@vue/shared';
import type { DefineComponent, ExtractPropTypes, Ref, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType } from 'vue';
import { AnyShapeStyle } from '../../common/configs';
declare const _sfc_main: DefineComponent<{
    baseX: {
        type: NumberConstructor;
        default: number;
    };
    baseY: {
        type: NumberConstructor;
        default: number;
    };
    config: {
        type: PropType<AnyShapeStyle>;
        required: true;
    };
}, {
    props: Readonly<LooseRequired<Readonly<ExtractPropTypes<{
        baseX: {
            type: NumberConstructor;
            default: number;
        };
        baseY: {
            type: NumberConstructor;
            default: number;
        };
        config: {
            type: PropType<AnyShapeStyle>;
            required: true;
        };
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
    scale: Ref<number>;
    x: Ref<number>;
    y: Ref<number>;
    strokeWidth: Ref<number>;
    strokeColor: Ref<string>;
    strokeDasharray: Ref<string | number | undefined>;
    radius: Ref<number>;
    width: Ref<number>;
    height: Ref<number>;
    borderRadius: Ref<number>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    baseX: {
        type: NumberConstructor;
        default: number;
    };
    baseY: {
        type: NumberConstructor;
        default: number;
    };
    config: {
        type: PropType<AnyShapeStyle>;
        required: true;
    };
}>>, {
    baseX: number;
    baseY: number;
}>;
export default _sfc_main;
