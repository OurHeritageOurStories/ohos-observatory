import type { LooseRequired } from '@vue/shared';
import type { DefineComponent, ExtractPropTypes, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType } from 'vue';
import { MarkerUnits } from '../../common/configs';
declare const _sfc_main: DefineComponent<{
    width: {
        type: NumberConstructor;
        required: true;
    };
    height: {
        type: NumberConstructor;
        required: true;
    };
    refX: {
        type: NumberConstructor;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    isSource: {
        type: BooleanConstructor;
        required: true;
    };
    units: {
        type: PropType<MarkerUnits>;
        required: true;
    };
}, {
    props: Readonly<LooseRequired<Readonly<ExtractPropTypes<{
        width: {
            type: NumberConstructor;
            required: true;
        };
        height: {
            type: NumberConstructor;
            required: true;
        };
        refX: {
            type: NumberConstructor;
            required: true;
        };
        color: {
            type: StringConstructor;
            required: true;
        };
        isSource: {
            type: BooleanConstructor;
            required: true;
        };
        units: {
            type: PropType<MarkerUnits>;
            required: true;
        };
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    width: {
        type: NumberConstructor;
        required: true;
    };
    height: {
        type: NumberConstructor;
        required: true;
    };
    refX: {
        type: NumberConstructor;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    isSource: {
        type: BooleanConstructor;
        required: true;
    };
    units: {
        type: PropType<MarkerUnits>;
        required: true;
    };
}>>, {}>;
export default _sfc_main;
