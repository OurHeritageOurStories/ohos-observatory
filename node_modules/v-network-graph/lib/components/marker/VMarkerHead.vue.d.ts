import type { LooseRequired } from '@vue/shared';
import type { DefineComponent, ExtractPropTypes, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType } from 'vue';
import { EdgeHeadType } from '../../common/configs';
import { HeadMarker } from '../../composables/marker';
declare type MarkerType = Exclude<EdgeHeadType, "none" | "custom">;
declare const _sfc_main: DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    marker: {
        type: PropType<HeadMarker>;
        required: true;
    };
    scale: {
        type: NumberConstructor;
        required: true;
    };
}, {
    types: Record<MarkerType, any>;
    props: Readonly<LooseRequired<Readonly<ExtractPropTypes<{
        id: {
            type: StringConstructor;
            required: true;
        };
        marker: {
            type: PropType<HeadMarker>;
            required: true;
        };
        scale: {
            type: NumberConstructor;
            required: true;
        };
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
    width: ComputedRef<number>;
    height: ComputedRef<number>;
    refX: ComputedRef<number>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    marker: {
        type: PropType<HeadMarker>;
        required: true;
    };
    scale: {
        type: NumberConstructor;
        required: true;
    };
}>>, {}>;
export default _sfc_main;
