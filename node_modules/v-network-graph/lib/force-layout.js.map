{"version":3,"file":"force-layout.js","sources":["../node_modules/d3-force/src/center.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/lcg.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../src/layouts/force.ts"],"sourcesContent":["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { toRef, watch } from \"vue\"\nimport { Edges, NodePositions, Nodes, Position } from \"@/common/types\"\nimport { OnClickHandler, OnDragHandler } from \"@/common/types\"\nimport { LayoutActivateParameters, LayoutHandler } from \"./handler\"\nimport * as d3 from \"d3-force\"\n\nexport interface ForceNodeDatum extends d3.SimulationNodeDatum {\n  id: string\n}\n\nexport interface ForceEdgeDatum {\n  source: string\n  target: string\n}\n\ntype d3Type = typeof d3\n\ntype CreateSimulationFunction = (\n  d3: d3Type,\n  nodes: ForceNodeDatum[],\n  edges: ForceEdgeDatum[]\n) => d3.Simulation<ForceNodeDatum, ForceEdgeDatum>\n\nexport type ForceLayoutParameters = {\n  positionFixedByDrag?: boolean\n  positionFixedByClickWithAltKey?: boolean\n  createSimulation?: CreateSimulationFunction\n}\n\nexport class ForceLayout implements LayoutHandler {\n  private onDeactivate?: () => void\n\n  constructor(private options: ForceLayoutParameters = {}) {}\n\n  activate(parameters: LayoutActivateParameters): void {\n    const { layouts, nodes, edges, emitter, svgPanZoom } = parameters\n    let { nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, layouts, { x: 0, y: 0 })\n\n    const simulation = this.createSimulation(nodeLayouts, this.forceLayoutEdges(edges.value))\n    simulation.on(\"tick\", () => {\n      for (const node of nodeLayouts) {\n        const layout = layouts?.[node.id]\n        if (layout) {\n          layout.x = node.x ?? 0\n          layout.y = node.y ?? 0\n        }\n      }\n    })\n\n    const restartSimulation = () => {\n      simulation.alpha(0.1).restart()\n    }\n\n    const onDrag: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id]\n        nodePos.fx = pos.x\n        nodePos.fy = pos.y\n      }\n      restartSimulation()\n    }\n\n    const onDragEnd: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(layouts, id)\n        const nodePos: d3.SimulationNodeDatum = nodeLayoutMap?.[id] ?? { x: 0, y: 0 }\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x\n          nodePos.fy = pos.y\n          layout.value.fixed = true\n        } else {\n          nodePos.x = pos.x\n          nodePos.y = pos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        }\n      }\n      restartSimulation()\n    }\n\n    const onClick: OnClickHandler = ({ node, event }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(layouts, node)\n        let nodePos: ForceNodeDatum | undefined = nodeLayoutMap?.[node]\n        if (!nodePos) {\n          nodePos = { id: node, x: 0, y: 0 }\n          nodeLayoutMap[node] = nodePos\n        }\n\n        if (layout.value.fixed) {\n          // unfix\n          delete layout.value.fixed\n          nodePos.x = nodePos.fx || nodePos.x\n          nodePos.y = nodePos.fy || nodePos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        } else {\n          // fix\n          layout.value.fixed = true\n          nodePos.fx = nodePos.x\n          nodePos.fy = nodePos.y\n        }\n        restartSimulation()\n      }\n    }\n\n    const stopNetworkWatch = watch(\n      () => [\n        Object.keys(nodes.value),\n        // Watch only for changes in links, not all properties of the edge objects.\n        Object.values(edges.value).map(e => `${e.source}=${e.target}`),\n      ],\n      () => {\n        // set new node's position to center of the view\n        const area = svgPanZoom.getViewArea()\n        ;({ nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, layouts, area.center))\n        simulation.nodes(nodeLayouts)\n        const forceEdges = simulation.force<d3.ForceLink<ForceNodeDatum, ForceEdgeDatum>>(\"edge\")\n        if (forceEdges) {\n          forceEdges.links(this.forceLayoutEdges(edges.value))\n        }\n        restartSimulation()\n      }\n    )\n\n    emitter.on(\"node:dragstart\", onDrag)\n    emitter.on(\"node:pointermove\", onDrag)\n    emitter.on(\"node:dragend\", onDragEnd)\n    emitter.on(\"node:click\", onClick)\n\n    this.onDeactivate = () => {\n      simulation.stop()\n      stopNetworkWatch()\n      emitter.off(\"node:dragstart\", onDrag)\n      emitter.off(\"node:pointermove\", onDrag)\n      emitter.off(\"node:dragend\", onDragEnd)\n      emitter.off(\"node:click\", onClick)\n    }\n  }\n\n  deactivate(): void {\n    if (this.onDeactivate) {\n      this.onDeactivate()\n    }\n  }\n\n  private createSimulation(\n    nodes: ForceNodeDatum[],\n    edges: ForceEdgeDatum[]\n  ): d3.Simulation<ForceNodeDatum, ForceEdgeDatum> {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges)\n    } else {\n      const forceLink = d3.forceLink<ForceNodeDatum, ForceEdgeDatum>(edges).id(d => d.id)\n      return d3\n        .forceSimulation(nodes)\n        .force(\"edge\", forceLink.distance(100))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide(50).strength(0.2))\n        .force(\"center\", d3.forceCenter().strength(0.05))\n        .alphaMin(0.001)\n    }\n  }\n\n  private buildNodeLayouts(nodes: Readonly<Nodes>, layouts: NodePositions, newPosition: Position) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in layouts))\n    for (const nodeId of newNodes) {\n      layouts[nodeId] = { ...newPosition }\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(layouts)\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]))\n    return { nodeLayouts, nodeLayoutMap }\n  }\n\n  private forceNodeLayouts(layouts: NodePositions): ForceNodeDatum[] {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? { id, ...v, fx: v.x, fy: v.y } : { id, ...v }\n    })\n  }\n\n  private forceLayoutEdges(edges: Edges): ForceEdgeDatum[] {\n    // d3-force replaces the source/target in the edge with NodeDatum\n    // objects, so build own link objects.\n    return Object.values(edges).map(v => ({\n      source: v.source,\n      target: v.target,\n    }))\n  }\n\n  private getNodeLayout(layouts: NodePositions, node: string) {\n    const layout = toRef(layouts, node)\n    if (!layout.value) {\n      layout.value = { x: 0, y: 0 }\n    }\n    return layout\n  }\n}\n"],"names":["x2","y2","nodes","strength","i","node","n","length","sx","sy","x","y","initialize","_","arguments","force","tree","d","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","call","_y","next","Array","Quadtree","defaultX","defaultY","NaN","addAll","copy","treeProto","quadtree","prototype","random","vx","vy","radius","radii","iterations","xi","yi","ri","ri2","k","visitAfter","prepare","index","visit","apply","quad","rj","r","l","jiggle","Math","sqrt","constant","_nodes","_random","nodeById","nodeId","get","Error","links","strengths","distances","count","bias","id","link2","min","source","target","distance","alpha","b","m2","Map","map","i2","find","initializeStrength","initializeDistance","child","this","leaf_copy","pop","push","add","cover","xz","yz","Infinity","floor","z","extent","x22","y22","q","x3","y3","quads","Quad","dx","dy","d2","remove","retainer","previous","removeAll","root","size","callback","noop","value","t","test","Dispatch","typenames","types","trim","split","name","indexOf","slice","hasOwnProperty","type","c2","concat","dispatch","constructor","on","typename","T","parseTypenames","set","that","args","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","clearNow","_call","_time","_next","delay","time","Timer","restart","e","t0","t2","t1","now2","clearTimeout","setTimeout","wake","clearInterval","setInterval","poke","timer","TypeError","stop","m","initialAngle","PI","simulation2","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","event","s","lcg","forEach","fx","fy","angle","cos","sin","tick","initializeNodes","initializeForce","randomSource","delete","closest","distanceMin2","distanceMax2","theta2","accumulate","node2","strength2","weight","abs","w","distanceMin","distanceMax","theta","radiuses","options","activate","parameters","layouts","edges","emitter","svgPanZoom","nodeLayouts","nodeLayoutMap","buildNodeLayouts","createSimulation","forceLayoutEdges","layout","restartSimulation","onDrag","pos","Object","entries","positions","nodePos","onDragEnd","getNodeLayout","fixed","positionFixedByDrag","onClick","positionFixedByClickWithAltKey","altKey","stopNetworkWatch","watch","keys","values","area","getViewArea","center","forceEdges","onDeactivate","off","deactivate","d3","forceLink","d3.forceLink","d3.forceSimulation","d3.forceManyBody","d3.forceCollide","d3.forceCenter","newPosition","newNodes","filter","__spreadValues","forceNodeLayouts","fromEntries","v","__spreadProps","toRef"],"mappings":"s6BAAwBA,EAAGC,OACrBC,EAAOC,EAAW,mBAMhBC,EAEAC,EADAC,EAAIJ,EAAMK,OAEVC,EAAK,EACLC,EAAK,MAEJL,EAAI,EAAGA,EAAIE,IAAKF,EACFI,MAAVN,EAAME,IAAeM,EAAGD,GAAMJ,EAAKM,MAGvCH,KAAWF,EAAIN,GAAKG,EAAUM,KAAWH,EAAIL,GAAKE,EAAUC,EAAI,EAAGA,EAAIE,IAAKF,KACxEF,EAAME,IAASM,GAAKF,EAAIH,EAAKM,GAAKF,SAfpC,MAALT,MAAe,GACV,MAALC,MAAe,KAkBbW,WAAa,SAASC,KAClBA,KAGJH,EAAI,SAASG,UACVC,UAAUP,WAAeM,EAAGE,GAASf,KAGxCW,EAAI,SAASE,UACVC,UAAUP,WAAeM,EAAGE,GAASd,KAGxCE,SAAW,SAASU,UACjBC,UAAUP,WAAsBM,EAAGE,GAASZ,GAG9CY,aChCIC,EAAMhB,EAAGC,EAAGgB,MACnBC,MAAMlB,IAAMkB,MAAMjB,UAAWe,MAE7BG,EAOAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACArB,EACAsB,EAbArB,EAAOW,EAAKW,MACZC,EAAO,CAACC,KAAMZ,GACda,EAAKd,EAAKe,IACVC,EAAKhB,EAAKiB,IACVC,EAAKlB,EAAKmB,IACVC,EAAKpB,EAAKqB,QAWThC,SAAaW,EAAKW,MAAQC,EAAMZ,OAG9BX,EAAKE,YACNiB,EAAQxB,SAAiBkC,GAAM,MAASd,IAAcA,GACtDK,EAASxB,SAAiBmC,GAAM,MAASf,IAAcA,EACvDF,EAASd,MAAeA,EAAKD,EAAIqB,GAAU,EAAID,WAAgBL,EAAOf,GAAKwB,EAAMZ,QAIjFA,EAAKsB,GAAGC,KAAK,KAAMlC,EAAKwB,SACxBb,EAAKwB,GAAGD,KAAK,KAAMlC,EAAKwB,MAC1B7B,IAAMsB,GAAMrB,IAAMsB,SAAWK,EAAKa,KAAOpC,EAAMc,EAASA,EAAOf,GAAKwB,EAAOZ,EAAKW,MAAQC,EAAMZ,OAIvFG,EAASA,EAAOf,GAAK,IAAIsC,MAAM,GAAK1B,EAAKW,MAAQ,IAAIe,MAAM,IAChElB,EAAQxB,SAAiBkC,GAAM,MAASd,IAAcA,GACtDK,EAASxB,SAAiBmC,GAAM,MAASf,IAAcA,WAC/CI,GAAU,EAAID,WAAuBH,IAAO,EAAKC,GAAMF,WAC9DD,EAAOO,GAAKrB,EAAMc,EAAOf,GAAKwB,EAAMZ,aC9CrBX,EAAMyB,EAAIE,EAAIE,EAAIE,QACnC/B,KAAOA,OACPyB,GAAKA,OACLE,GAAKA,OACLE,GAAKA,OACLE,GAAKA,aCLanB,UAChBA,EAAE,cCDcA,UAChBA,EAAE,cCYsBf,EAAOF,EAAGC,OACrCe,EAAO,IAAI2B,EAAc,MAAL3C,EAAY4C,EAAW5C,EAAQ,MAALC,EAAY4C,EAAW5C,EAAG6C,IAAKA,IAAKA,IAAKA,YAC3E,MAAT5C,EAAgBc,EAAOA,EAAK+B,OAAO7C,cAG1BF,EAAGC,EAAG6B,EAAIE,EAAIE,EAAIE,QAC7BE,GAAKtC,OACLwC,GAAKvC,OACL8B,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNT,WAAQ,aAGIC,WACboB,EAAO,CAACnB,KAAMD,EAAKC,MAAOY,EAAOO,EAC9BpB,EAAOA,EAAKa,QAAaA,EAAKA,KAAO,CAACZ,KAAMD,EAAKC,aACjDmB,MAGLC,EAAYC,EAASC,UAAYR,EAASQ,qBClCtBnD,UACf,kBACEA,cCFaoD,UACI,UAAP,eCGVnC,UACFA,EAAEP,EAAIO,EAAEoC,cAGNpC,UACFA,EAAEN,EAAIM,EAAEqC,cAGOC,OAClBrD,EACAsD,EACAJ,EACAjD,EAAW,EACXsD,EAAa,uBAKXrD,EACAY,EACAX,EACAqD,EACAC,EACAC,EACAC,EANGvD,EAAIJ,EAAMK,OAQRuD,EAAI,EAAGA,EAAIL,IAAcK,QACzBZ,EAAShD,EAAOQ,EAAGC,GAAGoD,WAAWC,GACnC5D,EAAI,EAAGA,EAAIE,IAAKF,IACZF,EAAME,KACRoD,EAAMnD,EAAK4D,OAAQJ,EAAMD,EAAKA,IAC9BvD,EAAKK,EAAIL,EAAKgD,KACdhD,EAAKM,EAAIN,EAAKiD,KACdY,MAAMC,cAIAC,EAAMtC,EAAIE,EAAIE,EAAIE,OAC3BP,EAAOuC,EAAKvC,KAAMwC,EAAKD,EAAKE,EAAGA,EAAIV,EAAKS,MACxCxC,SAiBGC,EAAK4B,EAAKY,GAAKpC,EAAKwB,EAAKY,GAAKtC,EAAK2B,EAAKW,GAAKlC,EAAKuB,EAAKW,KAhBxDzC,EAAKoC,MAAQ5D,EAAK4D,MAAO,KACvBjE,EAAI0D,EAAK7B,EAAKnB,EAAImB,EAAKwB,GACvBpD,EAAI0D,EAAK9B,EAAKlB,EAAIkB,EAAKyB,GACvBiB,EAAIvE,EAAIA,EAAIC,EAAIA,EAChBsE,EAAID,EAAIA,IACA,IAANtE,IAA6BuE,MAAhBC,EAAOpB,IAAkBpD,GAChC,IAANC,IAA6BsE,MAAhBC,EAAOpB,IAAkBnD,WAC5BwE,KAAKC,KAAKH,KAAOA,EAAIpE,IAC9BkD,QAAYkB,UAAiBF,MAAaA,MAC1Cf,QAAYiB,GAAKD,IACjBjB,IAAMrD,KAAS,EAAIsE,KACnBhB,IAAMrD,EAAIqE,gBASRF,MACXA,EAAKvC,YAAauC,EAAKE,EAAId,EAAMY,EAAKvC,KAAKoC,eACtC7D,EAAIgE,EAAKE,EAAI,EAAGlE,EAAI,IAAKA,EAC5BgE,EAAKhE,IAAMgE,EAAKhE,GAAGkE,EAAIF,EAAKE,MACzBA,EAAIF,EAAKhE,GAAGkE,mBAMhBpE,OACDE,EAAqBC,EAAlBC,EAAIJ,EAAMK,aACT,IAAImC,MAAMpC,GACbF,EAAI,EAAGA,EAAIE,IAAKF,IAAUF,EAAME,GAAIoD,EAAMnD,EAAK4D,QAAUV,EAAOlD,EAAMD,EAAGF,UA1D1D,mBAAXqD,MAAgCoB,EAAmB,MAAVpB,EAAiB,GAAKA,MA6DpE3C,WAAa,SAASgE,EAAQC,KAC1BD,IACCC,SAILpB,WAAa,SAAS5C,UACnBC,UAAUP,WAAwBM,EAAGE,GAAS0C,KAGjDtD,SAAW,SAASU,UACjBC,UAAUP,WAAsBM,EAAGE,GAASZ,KAG/CoD,OAAS,SAAS1C,UACfC,UAAUP,UAAgC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASwC,GAGlGxC,aC/FME,UACNA,EAAEgD,iBAGGa,EAAUC,OAClB1E,EAAOyE,EAASE,IAAID,OACnB1E,QAAY,IAAI4E,MAAM,mBAAqBF,UACzC1E,aAGe6E,OAGlBC,EAEAC,EACAlF,EACAmF,EACAC,EACAlC,EARAmC,EAAKtB,EACL9D,WAYqBqF,UAChB,EAAIf,KAAKgB,IAAIJ,EAAMG,EAAKE,OAAOzB,OAAQoB,EAAMG,EAAKG,OAAO1B,SAX9D2B,EAAWjB,EAAS,IAMpBlB,EAAa,aAQFoC,WACJ/B,EAAI,EAAGxD,EAAI4E,EAAM3E,OAAQuD,EAAIL,IAAcK,UAClC0B,EAAME,EAAQC,EAAQ3F,EAAGC,EAAGsE,EAAGuB,EAAtC1F,EAAI,EAAqCA,EAAIE,IAAKF,EACxCsF,KAAVR,EAAM9E,IAAkBsF,UAAQC,EAASH,EAAKG,QAC1CjF,EAAIiF,EAAOtC,GAAKqC,EAAOhF,EAAIgF,EAAOrC,IAAMmB,EAAOpB,KACtDuC,EAAOhF,EAAIgF,EAAOrC,GAAKoC,EAAO/E,EAAI+E,EAAOpC,IAAMkB,EAAOpB,YACtDqB,KAAKC,KAAK1E,EAAIA,EAAIC,EAAIA,IACjBmF,EAAUhF,IAAMmE,EAAIsB,EAAQV,EAAU/E,GACvCH,GAAKsE,IACNlB,IAAMrD,KAASsF,EAAKlF,MACpBkD,IAAMrD,EAAI6F,IACVzC,IAAMrD,KAAS,EAAI8F,KACnBxC,IAAMrD,EAAI6F,kBAMhB5F,OAEDE,EAIAoF,EAHAlF,EAAIJ,EAAMK,OACVwF,EAAIb,EAAM3E,OACVuE,EAAW,IAAIkB,IAAI9F,EAAM+F,KAAI,CAAChF,EAAGiF,IAAM,CAACX,EAAGtE,EAAGiF,EAAGhG,GAAQe,UAGxDb,EAAI,EAAGiF,EAAQ,IAAI3C,MAAMpC,GAAIF,EAAI2F,IAAK3F,KAClC8E,EAAM9E,IAAS6D,MAAQ7D,EACH,iBAAhBoF,EAAKE,WAA0BA,OAASS,EAAKrB,EAAUU,EAAKE,SAC5C,iBAAhBF,EAAKG,WAA0BA,OAASQ,EAAKrB,EAAUU,EAAKG,WACjEH,EAAKE,OAAOzB,UAAgBuB,EAAKE,OAAOzB,QAAU,GAAK,IACvDuB,EAAKG,OAAO1B,UAAgBuB,EAAKG,OAAO1B,QAAU,GAAK,MAG1D7D,EAAI,EAAGkF,EAAO,IAAI5C,MAAMqD,GAAI3F,EAAI2F,IAAK3F,IACjC8E,EAAM9E,GAAIkF,EAAKlF,GAAKiF,EAAMG,EAAKE,OAAOzB,UAAgBuB,EAAKE,OAAOzB,OAASoB,EAAMG,EAAKG,OAAO1B,UAG1F,IAAIvB,MAAMqD,GAAIK,MACd,IAAI1D,MAAMqD,GAAIM,qBAIrBnG,UAEIE,EAAI,EAAGE,EAAI4E,EAAM3E,OAAQH,EAAIE,IAAKF,IAC/BA,IAAMD,EAAS+E,EAAM9E,GAAIA,EAAG8E,mBAKnChF,UAEIE,EAAI,EAAGE,EAAI4E,EAAM3E,OAAQH,EAAIE,IAAKF,IAC/BA,IAAMwF,EAASV,EAAM9E,GAAIA,EAAG8E,UA5D7B,MAATA,MAAuB,MAgErBtE,WAAa,SAASgE,EAAQC,KAC1BD,IACCC,SAILK,MAAQ,SAASrE,UACdC,UAAUP,UAAkBM,EAAGD,IAAcG,GAASmE,KAGzDK,GAAK,SAAS1E,UACXC,UAAUP,UAAeM,EAAGE,GAASwE,KAGxC9B,WAAa,SAAS5C,UACnBC,UAAUP,WAAwBM,EAAGE,GAAS0C,KAGjDtD,SAAW,SAASU,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAIuF,IAAsBrF,GAASZ,KAG7GyF,SAAW,SAAS/E,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAIwF,IAAsBtF,GAAS6E,GAG5G7E,IJ/ECiC,KAAO,eAGX9C,EACAoG,EAHAtD,EAAO,IAAIL,EAAS4D,KAAKjE,GAAIiE,KAAK/D,GAAI+D,KAAKxE,IAAKwE,KAAKtE,IAAKsE,KAAKpE,IAAKoE,KAAKlE,KACzEhC,EAAOkG,KAAK5E,UAIXtB,SAAa2C,MAEb3C,EAAKE,cAAeyC,EAAKrB,MAAQ6E,EAAUnG,GAAO2C,QAE/C,CAAC,CAAC0C,OAAQrF,EAAMsF,OAAQ3C,EAAKrB,MAAQ,IAAIe,MAAM,KAChDrC,EAAOH,EAAMuG,eACTrG,EAAI,EAAGA,EAAI,IAAKA,GACnBkG,EAAQjG,EAAKqF,OAAOtF,MAClBkG,EAAM/F,SAAcmG,KAAK,CAAChB,OAAQY,EAAOX,OAAQtF,EAAKsF,OAAOvF,GAAK,IAAIsC,MAAM,OACtEiD,OAAOvF,GAAKoG,EAAUF,WAK/BtD,KAGC2D,aJ3Dc1F,SAChBjB,GAAKuG,KAAKjE,GAAGC,KAAK,KAAMtB,GAC1BhB,GAAKsG,KAAK/D,GAAGD,KAAK,KAAMtB,UACrB0F,EAAIJ,KAAKK,MAAM5G,EAAGC,GAAID,EAAGC,EAAGgB,MIyD3B8B,gBJXalB,OACjBZ,EAAGb,EACHJ,EACAC,EAFMK,EAAIuB,EAAKtB,OAGfsG,EAAK,IAAInE,MAAMpC,GACfwG,EAAK,IAAIpE,MAAMpC,GACfwB,EAAKiF,EAAAA,EACL/E,EAAK+E,EAAAA,EACL7E,OACAE,WAGChC,EAAI,EAAGA,EAAIE,IAAKF,EACfc,MAAMlB,GAAKuG,KAAKjE,GAAGC,KAAK,KAAMtB,EAAIY,EAAKzB,MAAQc,MAAMjB,GAAKsG,KAAK/D,GAAGD,KAAK,KAAMtB,QAC9Eb,GAAKJ,IACLI,GAAKH,EACJD,EAAI8B,MAAS9B,GACbA,EAAIkC,MAASlC,GACbC,EAAI+B,MAAS/B,GACbA,EAAImC,MAASnC,OAIf6B,EAAKI,GAAMF,EAAKI,SAAWmE,cAG1BK,MAAM9E,EAAIE,GAAI4E,MAAM1E,EAAIE,GAGxBhC,EAAI,EAAGA,EAAIE,IAAKF,IACfmG,KAAMM,EAAGzG,GAAI0G,EAAG1G,GAAIyB,EAAKzB,WAGxBmG,QIrBCK,eK7Dc5G,EAAGC,MACrBiB,MAAMlB,GAAKA,IAAMkB,MAAMjB,GAAKA,UAAWsG,SAEvCzE,EAAKyE,KAAKxE,IACVC,EAAKuE,KAAKtE,IACVC,EAAKqE,KAAKpE,IACVC,EAAKmE,KAAKlE,OAKVnB,MAAMY,QACG2C,KAAKuC,MAAMhH,IAAM,OACjByE,KAAKuC,MAAM/G,IAAM,MAIzB,SAGCkB,EACAf,EAHA6G,EAAI/E,EAAKJ,GAAM,EACfzB,EAAOkG,KAAK5E,MAITG,EAAK9B,GAAKA,GAAKkC,GAAMF,EAAK/B,GAAKA,GAAKmC,eAChCJ,IAAO,EAAKhC,EAAI8B,KAChB,IAAIY,MAAM,IAAWtC,GAAKC,EAAMA,EAAOc,EAAQ8F,GAAK,EACrD7G,QACD,IAAQ0B,EAAKmF,EAAG7E,EAAKJ,EAAKiF,aAC1B,IAAQ/E,EAAK+E,EAAG7E,EAAKJ,EAAKiF,aAC1B,IAAQnF,EAAKmF,EAAGjF,EAAKI,EAAK6E,aAC1B,IAAQ/E,EAAK+E,EAAGjF,EAAKI,EAAK6E,EAI/BV,KAAK5E,OAAS4E,KAAK5E,MAAMpB,cAAaoB,MAAQtB,eAG/C0B,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNG,IAAMD,EACJmE,QLqBC1E,oBM7DJA,EAAO,eACNqC,OAAM,SAAS7D,OACbA,EAAKE,YAAgBmG,KAAKrG,EAAKwB,YAAcxB,EAAOA,EAAKoC,SAEzDZ,KN0DCqF,gBO/DcrG,UACfC,UAAUP,OACXgG,KAAKK,OAAO/F,EAAE,GAAG,IAAKA,EAAE,GAAG,IAAI+F,OAAO/F,EAAE,GAAG,IAAKA,EAAE,GAAG,IACrDK,MAAMqF,KAAKxE,UAAO,EAAY,CAAC,CAACwE,KAAKxE,IAAKwE,KAAKtE,KAAM,CAACsE,KAAKpE,IAAKoE,KAAKlE,SP6DnE8D,cQ9DcnG,EAAGC,EAAGsD,OACxB1B,EAGAK,EACAE,EACA+E,EACAC,EAKAC,EACAjH,EAXA0B,EAAKyE,KAAKxE,IACVC,EAAKuE,KAAKtE,IAKVqF,EAAKf,KAAKpE,IACVoF,EAAKhB,KAAKlE,IACVmF,EAAQ,GACRnH,EAAOkG,KAAK5E,UAIZtB,KAAYqG,KAAK,IAAIe,EAAKpH,EAAMyB,EAAIE,EAAIsF,EAAIC,IAClC,MAAVhE,IAAyBwD,EAAAA,KAEtB/G,EAAIuD,EAAQvB,EAAK/B,EAAIsD,IACrBvD,EAAIuD,EAAQgE,EAAKtH,EAAIsD,KAChBA,GAGL8D,EAAIG,EAAMf,gBAGFY,EAAEhH,UACFgH,EAAEvF,IAAMwF,MACRD,EAAErF,IAAMuF,MACRF,EAAEnF,IAAMJ,MACRuF,EAAEjF,IAAMJ,MAGjB3B,EAAKE,OAAQ,KACXa,KAAW+F,GAAM,EACjB9F,KAAW+F,GAAM,IAEfV,KACJ,IAAIe,EAAKpH,EAAK,GAAIe,EAAIC,EAAI8F,EAAIC,GAC9B,IAAIK,EAAKpH,EAAK,GAAI6B,EAAIb,EAAID,EAAIgG,GAC9B,IAAIK,EAAKpH,EAAK,GAAIe,EAAIgB,EAAI+E,EAAI9F,GAC9B,IAAIoG,EAAKpH,EAAK,GAAI6B,EAAIE,EAAIhB,EAAIC,KAI5BjB,MAAUiB,IAAO,EAAKrB,GAAKoB,OACzBoG,EAAMA,EAAMjH,OAAS,KACnBiH,EAAMjH,OAAS,GAAKiH,EAAMA,EAAMjH,OAAS,EAAIH,KAC7CoH,EAAMjH,OAAS,EAAIH,GAAKiH,OAK7B,KACCK,EAAK1H,GAAKuG,KAAKjE,GAAGC,KAAK,KAAMlC,EAAKwB,MAClC8F,EAAK1H,GAAKsG,KAAK/D,GAAGD,KAAK,KAAMlC,EAAKwB,MAClC+F,EAAKF,EAAKA,EAAKC,EAAKA,KACpBC,EAAKrE,EAAQ,KACXtC,EAAIwD,KAAKC,KAAKnB,EAASqE,KACtB5H,EAAIiB,EAAGe,EAAK/B,EAAIgB,IAChBjB,EAAIiB,EAAGsG,EAAKtH,EAAIgB,IACdZ,EAAKwB,aAKXA,KRHCgG,gBSjEc5G,MAClBC,MAAMlB,GAAKuG,KAAKjE,GAAGC,KAAK,KAAMtB,KAAOC,MAAMjB,GAAKsG,KAAK/D,GAAGD,KAAK,KAAMtB,WAAYsF,SAE/EpF,EAEA2G,EACAC,EACAtF,EAKAzC,EACAC,EACAmB,EACAC,EACAG,EACAC,EACArB,EACAsB,EAfArB,EAAOkG,KAAK5E,MAIZG,EAAKyE,KAAKxE,IACVC,EAAKuE,KAAKtE,IACVC,EAAKqE,KAAKpE,IACVC,EAAKmE,KAAKlE,QAWThC,SAAakG,QAIdlG,EAAKE,cAAqB,KACxBiB,EAAQxB,SAAiBkC,GAAM,MAASd,IAAcA,GACtDK,EAASxB,SAAiBmC,GAAM,MAASf,IAAcA,IAC5ChB,IAAMA,EAAOA,EAAKD,EAAIqB,GAAU,EAAID,WAAgB+E,SAC9DlG,EAAKE,cACNY,EAAQf,EAAI,EAAK,IAAMe,EAAQf,EAAI,EAAK,IAAMe,EAAQf,EAAI,EAAK,QAAee,EAAQO,EAAItB,QAIzFC,EAAKwB,OAASZ,QAAoBZ,IAAMA,EAAOA,EAAKoC,aAAc8D,YACrE9D,EAAOpC,EAAKoC,cAAapC,EAAKoC,KAG9BsF,GAAkBtF,EAAOsF,EAAStF,KAAOA,SAAcsF,EAAStF,KAAO8D,MAGtEpF,KAGEA,EAAOf,GAAKqC,SAActB,EAAOf,MAG5Be,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,KACnDd,OAAiB,IAAMc,EAAO,IAAMA,EAAO,IAAMA,EAAO,MACvDd,EAAKE,SACPuH,IAAmBpG,GAAKrB,OAClBsB,MAAQtB,GAGbkG,OAbaA,KAAK5E,MAAQc,EAAM8D,STwB/ByB,mBSRgBnG,WACfzB,EAAI,EAAGE,EAAIuB,EAAKtB,OAAQH,EAAIE,IAAKF,OAAQyH,OAAOhG,EAAKzB,WACvDmG,QTOC0B,uBUlED1B,KAAK5E,SVmEJuG,oBWnEJA,EAAO,cACNhE,OAAM,SAAS7D,OACbA,EAAKE,YAAa2H,QAAa7H,EAAOA,EAAKoC,SAE3CyF,KXgEChE,eYnEciE,OACNd,EAAsBf,EAAOxE,EAAIE,EAAIE,EAAIE,EAArDoF,EAAQ,GAAOnH,EAAOkG,KAAK5E,UAC3BtB,KAAYqG,KAAK,IAAIe,EAAKpH,EAAMkG,KAAKxE,IAAKwE,KAAKtE,IAAKsE,KAAKpE,IAAKoE,KAAKlE,MAChEgF,EAAIG,EAAMf,WACV0B,EAAS9H,EAAOgH,EAAEhH,KAAMyB,EAAKuF,EAAEvF,GAAIE,EAAKqF,EAAErF,GAAIE,EAAKmF,EAAEnF,GAAIE,EAAKiF,EAAEjF,KAAO/B,EAAKE,OAAQ,KACnFa,KAAWc,GAAM,EAAGb,KAAWe,GAAM,GACrCkE,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOlF,EAAIC,EAAIa,EAAIE,KACxDkE,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOxE,EAAIT,EAAID,EAAIgB,KACxDkE,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOlF,EAAIY,EAAIE,EAAIb,KACxDiF,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOxE,EAAIE,EAAIZ,EAAIC,WAGzDkF,QZwDCxC,oBapEcoE,OACKd,EAAvBG,EAAQ,GAAI/E,EAAO,OACnB8D,KAAK5E,SAAa+E,KAAK,IAAIe,EAAKlB,KAAK5E,MAAO4E,KAAKxE,IAAKwE,KAAKtE,IAAKsE,KAAKpE,IAAKoE,KAAKlE,MAC5EgF,EAAIG,EAAMf,OAAO,KAClBpG,EAAOgH,EAAEhH,QACTA,EAAKE,OAAQ,KACX+F,EAAOxE,EAAKuF,EAAEvF,GAAIE,EAAKqF,EAAErF,GAAIE,EAAKmF,EAAEnF,GAAIE,EAAKiF,EAAEjF,GAAIhB,KAAWc,GAAM,EAAGb,KAAWe,GAAM,GACxFkE,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOxE,EAAIE,EAAIZ,EAAIC,KACxDiF,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOlF,EAAIY,EAAIE,EAAIb,KACxDiF,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOxE,EAAIT,EAAID,EAAIgB,KACxDkE,EAAQjG,EAAK,OAAUqG,KAAK,IAAIe,EAAKnB,EAAOlF,EAAIC,EAAIa,EAAIE,MAEzDsE,KAAKW,QAELA,EAAI5E,EAAKgE,SACLY,EAAEhH,KAAMgH,EAAEvF,GAAIuF,EAAErF,GAAIqF,EAAEnF,GAAImF,EAAEjF,WAEhCmE,QboDC7F,WFnEcG,UACfC,UAAUP,aAAe+B,GAAKzB,EAAG0F,MAAQA,KAAKjE,MEmE7C3B,WDpEcE,UACfC,UAAUP,aAAeiC,GAAK3B,EAAG0F,MAAQA,KAAK/D,QeLnD4F,EAAO,CAACC,MAAO,6BAG6BC,EAArClI,EAAI,EAAGE,EAAIQ,UAAUP,OAAQM,EAAI,GAAOT,EAAIE,IAAKF,EAAG,QACjDU,UAAUV,GAAK,KAAQkI,KAAKzH,GAAM,QAAQ0H,KAAKD,SAAU,IAAIrD,MAAM,iBAAmBqD,KAC9FA,GAAK,UAEF,IAAIE,EAAS3H,cAGJA,QACXA,EAAIA,aAGa4H,EAAWC,UAC1BD,EAAUE,OAAOC,MAAM,SAAS3C,KAAI,SAASqC,OAC9CO,EAAO,GAAIzI,EAAIkI,EAAEQ,QAAQ,QACzB1I,GAAK,MAAUkI,EAAES,MAAM3I,EAAI,GAAIkI,EAAIA,EAAES,MAAM,EAAG3I,IAC9CkI,IAAMI,EAAMM,eAAeV,SAAU,IAAIrD,MAAM,iBAAmBqD,SAC/D,CAACW,KAAMX,EAAGO,KAAAA,iBA6CRI,EAAMJ,WACgBK,EAAxB9I,EAAI,EAAGE,EAAI2I,EAAK1I,OAAWH,EAAIE,IAAKF,QAClC6I,EAAK7I,IAAIyI,OAASA,SAClBK,EAAEb,iBAKFY,EAAMJ,EAAMV,WACd/H,EAAI,EAAGE,EAAI2I,EAAK1I,OAAQH,EAAIE,IAAKF,KACpC6I,EAAK7I,GAAGyI,OAASA,EAAM,GACpBzI,GAAKgI,EAAMa,EAAOA,EAAKF,MAAM,EAAG3I,GAAG+I,OAAOF,EAAKF,MAAM3I,EAAI,iBAIlD,MAAZ+H,KAAuBzB,KAAK,CAACmC,KAAAA,EAAYR,MAAOF,IAC7Cc,IAzDA9F,UAAYiG,EAASjG,UAAY,CACxCkG,YAAab,EACbc,GAAI,SAASC,EAAUpB,OAGjBG,EAFAzH,EAAI0F,KAAK1F,EACT2I,EAAIC,EAAeF,EAAW,GAAI1I,GAElCT,KACAE,EAAIkJ,EAAEjJ,YAGNO,UAAUP,OAAS,OAOP,MAAZ4H,GAAwC,mBAAbA,QAA+B,IAAIlD,MAAM,qBAAuBkD,UACtF/H,EAAIE,MACPgI,KAAgBkB,EAAEpJ,IAAI6I,OAAQX,GAAKoB,EAAI7I,EAAEyH,GAAIiB,EAASV,KAAMV,WAC3C,MAAZA,MAAuBG,KAAKzH,IAAKyH,GAAKoB,EAAI7I,EAAEyH,GAAIiB,EAASV,KAAM,aAGnEtC,YAZInG,EAAIE,YAAwBkJ,EAAEpJ,IAAI6I,UAAcjE,EAAInE,EAAEyH,GAAIiB,EAASV,cAAeP,GAc/FtF,KAAM,eACAA,EAAO,GAAInC,EAAI0F,KAAK1F,UACfyH,KAAKzH,IAAQyH,GAAKzH,EAAEyH,GAAGS,eACzB,IAAIP,EAASxF,IAEtBT,KAAM,SAAS0G,EAAMU,SACV7I,UAAUP,OAAS,GAAK,UAAwCD,EAAGgI,EAA/BsB,EAAO,IAAIlH,MAAMpC,GAAIF,EAAI,EAASA,EAAIE,IAAKF,IAAQA,GAAKU,UAAUV,EAAI,OAC9GmG,KAAK1F,EAAEmI,eAAeC,SAAa,IAAIhE,MAAM,iBAAmBgE,OAC9C7I,EAAI,EAAGE,GAAzBgI,EAAI/B,KAAK1F,EAAEoI,IAAoB1I,OAAQH,EAAIE,IAAKF,IAAKA,GAAGiI,MAAMlE,MAAMwF,EAAMC,IAEjFzF,MAAO,SAAS8E,EAAMU,EAAMC,OACrBrD,KAAK1F,EAAEmI,eAAeC,SAAa,IAAIhE,MAAM,iBAAmBgE,WAC5DX,EAAI/B,KAAK1F,EAAEoI,GAAO7I,EAAI,EAAGE,EAAIgI,EAAE/H,OAAQH,EAAIE,IAAKF,IAAKA,GAAGiI,MAAMlE,MAAMwF,EAAMC,SCxDnFC,EACAC,EALAC,EAAQ,EACRC,EAAU,EACVC,EAAW,EAIXC,EAAY,EACZC,EAAW,EACXC,EAAY,EACZC,EAA+B,iBAAhBC,aAA4BA,YAAYC,IAAMD,YAAcE,KAC3EC,EAA6B,iBAAXC,QAAuBA,OAAOC,sBAAwBD,OAAOC,sBAAsBC,KAAKF,QAAU,SAASG,cAAgBA,EAAG,yBAG3IV,MAAsBW,GAAWX,EAAWE,EAAME,MAAQH,kBAItD,oBAINW,MACLxE,KAAKyE,MACLzE,KAAK0E,MAAQ,gBA0BO9C,EAAU+C,EAAOC,OACjC7C,EAAI,IAAI8C,WACVC,QAAQlD,EAAU+C,EAAOC,GACpB7C,oBAeiB+B,EAAME,OAASH,IAC/BJ,EAAU,wBAXhBD,UACgBuB,EAAdhD,EAAIuB,EACDvB,MACI6B,EAAW7B,EAAE0C,QAAU,KAAKD,MAAMxI,UAAK,EAAW+I,KACvDhD,EAAE2C,QAENlB,eASQ,iBAYNwB,EAAmBC,EAAfC,EAAK5B,EAAcsB,EAAOpE,EAAAA,OAC3B0E,GACDA,EAAGV,OACDI,EAAOM,EAAGT,UAAcS,EAAGT,SAC1BS,EAAIA,EAAKA,EAAGR,UAEZQ,EAAGR,MAAOQ,EAAGR,MAAQ,OACrBM,EAAKA,EAAGN,MAAQO,EAAK3B,EAAW2B,KAG9BD,IACLJ,QArBO,oBAKTO,EAAMrB,EAAME,MAAOW,EAAQQ,EAAMxB,EACjCgB,EA7EU,SA6EsBA,EAAOhB,EAAYwB,cAkB1CP,GACTpB,IACAC,MAAmB2B,aAAa3B,IACxBmB,EAAOhB,EACP,IACNgB,EAAOpE,EAAAA,MAAoB6E,WAAWC,EAAMV,EAAOd,EAAME,MAAQH,IACjEH,MAAqB6B,cAAc7B,MAElCA,MAAsBI,EAAME,MAAON,EAAW8B,YAAYC,EAvGnD,QAwGJ,EAAGvB,EAASoB,OAjFlB1I,UAAY8I,EAAM9I,UAAY,CAClCkG,YAAa+B,EACbC,QAAS,SAASlD,EAAU+C,EAAOC,MACT,mBAAbhD,QAA+B,IAAI+D,UAAU,iCACxC,QAAO3B,KAASY,IAAkB,QAAO,GAAKD,GACzD3E,KAAK0E,OAASnB,IAAavD,OAC1BuD,IAAmBmB,MAAQ1E,OACfA,OACLA,WAERwE,MAAQ5C,OACR6C,MAAQG,OAGfgB,KAAM,WACA5F,KAAKwE,aACFA,MAAQ,UACRC,MAAQjE,EAAAA,eCxCbqF,EAAI,sBCCQnL,UACTA,EAAEP,aAGOO,UACTA,EAAEN,MAIP0L,EAAe5H,KAAK6H,MAAU7H,KAAKC,KAAK,eAEpBxE,OAClBqM,EACA1G,EAAQ,EACR2G,EAAW,KACXC,EAAa,EAAIhI,KAAKiI,IAAIF,EAAU,EAAI,KACxCG,EAAc,EACdC,EAAgB,GAChBC,MAAa7G,IACb8G,EAAUb,EAAMc,GAChBC,EAAQ5D,EAAS,OAAQ,OACzBhG,iBDnBA6J,EAAI,QACD,QANC,QAMeA,EALf,YAKwBb,GAAKA,ECkBxBc,sBAML3K,KAAK,OAAQgK,GACf1G,EAAQ2G,MACFL,SACF5J,KAAK,MAAOgK,eAIR9I,OACRrD,EAAqBC,EAAlBC,EAAIJ,EAAMK,YAEE,IAAfkD,MAAuC,WAElCK,EAAI,EAAGA,EAAIL,IAAcK,YACR+B,GAAS4G,IAE1BU,SAAQ,SAASpM,KAChB8E,MAGHzF,EAAI,EAAGA,EAAIE,IAAKF,EAEJ,SADRF,EAAME,IACJgN,KAAiB1M,GAAKL,EAAKgD,IAAMuJ,KAChClM,EAAIL,EAAK+M,GAAI/M,EAAKgD,GAAK,GAClB,MAAXhD,EAAKgN,KAAiB1M,GAAKN,EAAKiD,IAAMsJ,KAChCjM,EAAIN,EAAKgN,GAAIhN,EAAKiD,GAAK,UAI9BiJ,uBAI2BlM,EAAzBD,EAAI,EAAGE,EAAIJ,EAAMK,OAAcH,EAAIE,IAAKF,EAAG,OAC3CF,EAAME,IAAS6D,MAAQ7D,EACf,MAAXC,EAAK+M,OAAiB1M,EAAIL,EAAK+M,IACpB,MAAX/M,EAAKgN,OAAiB1M,EAAIN,EAAKgN,IAC/BnM,MAAMb,EAAKK,IAAMQ,MAAMb,EAAKM,GAAI,KAC9B4C,EAxDQ,GAwDiBkB,KAAKC,KAAK,GAAMtE,GAAIkN,EAAQlN,EAAIiM,IACxD3L,EAAI6C,EAASkB,KAAK8I,IAAID,KACtB3M,EAAI4C,EAASkB,KAAK+I,IAAIF,IAEzBpM,MAAMb,EAAKgD,KAAOnC,MAAMb,EAAKiD,SAC1BD,GAAKhD,EAAKiD,GAAK,eAKDvC,UACnBA,EAAMH,cAAkBA,WAAWV,EAAOkD,GACvCrC,SArDI,MAATb,MAAuB,QA0DpBqM,EAAa,CAClBkB,KAAAA,EAEApC,QAAS,kBACAyB,EAAQzB,QAAQ0B,GAAOR,GAGhCJ,KAAM,kBACGW,EAAQX,OAAQI,GAGzBrM,MAAO,SAASW,UACPC,UAAUP,UAAkBM,EAAG6M,IAAmBb,EAAOM,QAAQQ,GAAkBpB,GAAcrM,GAG1G2F,MAAO,SAAShF,UACPC,UAAUP,WAAmBM,EAAG0L,GAAc1G,GAGvD2G,SAAU,SAAS3L,UACVC,UAAUP,WAAsBM,EAAG0L,GAAcC,GAG1DC,WAAY,SAAS5L,UACZC,UAAUP,WAAwBM,EAAG0L,IAAeE,GAG7DE,YAAa,SAAS9L,UACbC,UAAUP,WAAyBM,EAAG0L,GAAcI,GAG7DC,cAAe,SAAS/L,UACfC,UAAUP,UAA0B,EAAIM,EAAG0L,GAAc,EAAIK,GAGtEgB,aAAc,SAAS/M,UACdC,UAAUP,UAAmBM,EAAGgM,EAAOM,QAAQQ,GAAkBpB,GAAcnJ,GAGxFrC,MAAO,SAAS8H,EAAMhI,UACbC,UAAUP,OAAS,GAAW,QAAOsM,EAAOgB,OAAOhF,GAAQgE,EAAOnD,IAAIb,EAAM8E,EAAgB9M,IAAM0L,GAAcM,EAAO7H,IAAI6D,IAGpI1C,KAAM,SAASnG,EAAGC,EAAGsD,OAGfmE,EACAC,EACAC,EACAvH,EACAyN,EANA1N,EAAI,EACJE,EAAIJ,EAAMK,WAOA,MAAVgD,IAAyBwD,EAAAA,KACdxD,EAEVnD,EAAI,EAAGA,EAAIE,IAAKF,QAEdJ,KADEE,EAAME,IACCM,GAEJgH,KADLzH,EAAII,EAAKM,GACMgH,GACXpE,MAAkBlD,EAAMkD,EAASqE,UAGrCkG,GAGTxE,GAAI,SAAST,EAAMhI,UACVC,UAAUP,OAAS,KAAW+I,GAAGT,EAAMhI,GAAI0L,GAAcS,EAAM1D,GAAGT,sBClJzE3I,EACAG,EACA+C,EACAyC,EAEAV,EADAhF,EAAWwE,OAEXoJ,EAAe,EACfC,EAAejH,EAAAA,EACfkH,EAAS,eAEEpN,OACTT,EAAGE,EAAIJ,EAAMK,OAAQS,EAAOkC,EAAShD,EAAOQ,EAAGC,GAAGoD,WAAWmK,OAC5DrI,EAAQhF,EAAGT,EAAI,EAAGA,EAAIE,IAAKF,IAAUF,EAAME,GAAIY,EAAKkD,MAAMC,mBAI1DjE,OACDE,EAAqB+N,EAAlB7N,EAAIJ,EAAMK,aACL,IAAImC,MAAMpC,GACjBF,EAAI,EAAGA,EAAIE,IAAKF,IAAUF,EAAME,GAAI+E,EAAUgJ,EAAKlK,QAAU9D,EAASgO,EAAM/N,EAAGF,eAGlEkE,OACAiD,EAAG6B,EAAelJ,EAAGC,EAAGG,EAAtCgO,EAAW,EAASC,EAAS,KAG7BjK,EAAK7D,OAAQ,KACVP,EAAIC,EAAIG,EAAI,EAAGA,EAAI,IAAKA,KAClBgE,EAAKhE,QAAYqE,KAAK6J,IAAIjH,EAAEgB,aACvBhB,EAAEgB,MAAOgG,GAAUnF,EAAGlJ,GAAKkJ,EAAI7B,EAAE3G,EAAGT,GAAKiJ,EAAI7B,EAAE1G,KAG1DD,EAAIV,EAAIqO,IACR1N,EAAIV,EAAIoO,MAIV,IACCjK,GACF1D,EAAI2G,EAAExF,KAAKnB,IACXC,EAAI0G,EAAExF,KAAKlB,QACEwE,EAAUkC,EAAExF,KAAKoC,aACzBoD,EAAIA,EAAE5E,QAGV4F,MAAQ+F,aAGAhK,EAAMlC,EAAIrB,EAAGb,OACrBoE,EAAKiE,aAAc,MAEpBf,EAAIlD,EAAK1D,EAAIL,EAAKK,EAClBT,EAAImE,EAAKzD,EAAIN,EAAKM,EAClB4N,EAAIvO,EAAKkC,EACTqC,EAAI+C,EAAIA,EAAIrH,EAAIA,KAIhBsO,EAAIA,EAAIN,EAAS1J,SACfA,EAAIyJ,IACI,IAAN1G,IAA6B/C,MAAhBC,EAAOpB,IAAkBkE,GAChC,IAANrH,IAA6BsE,MAAhBC,EAAOpB,IAAkBnD,GACtCsE,EAAIwJ,MAAkBtJ,KAAKC,KAAKqJ,EAAexJ,MAC9ClB,IAAMiE,EAAIlD,EAAKiE,MAAQxC,EAAQtB,IAC/BjB,IAAMrD,EAAImE,EAAKiE,MAAQxC,EAAQtB,IAE/B,OAIAH,EAAK7D,QAAUgE,GAAKyJ,KAGzB5J,EAAKvC,OAASxB,GAAQ+D,EAAK3B,QACnB,IAAN6E,IAA6B/C,MAAhBC,EAAOpB,IAAkBkE,GAChC,IAANrH,IAA6BsE,MAAhBC,EAAOpB,IAAkBnD,GACtCsE,EAAIwJ,MAAkBtJ,KAAKC,KAAKqJ,EAAexJ,QAG9CH,EAAKvC,OAASxB,MACf8E,EAAUf,EAAKvC,KAAKoC,OAAS4B,EAAQtB,IACpClB,IAAMiE,EAAIiH,IACVjL,IAAMrD,EAAIsO,SACRnK,EAAOA,EAAK3B,gBAGjB7B,WAAa,SAASgE,EAAQC,KAC1BD,IACCC,SAIL1E,SAAW,SAASU,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASZ,KAGrGqO,YAAc,SAAS3N,UACpBC,UAAUP,UAAyBM,EAAIA,EAAGE,GAAS0D,KAAKC,KAAKqJ,MAGhEU,YAAc,SAAS5N,UACpBC,UAAUP,UAAyBM,EAAIA,EAAGE,GAAS0D,KAAKC,KAAKsJ,MAGhEU,MAAQ,SAAS7N,UACdC,UAAUP,UAAmBM,EAAIA,EAAGE,GAAS0D,KAAKC,KAAKuJ,IAGzDlN,kJChHewC,EAAQvD,EAAGC,OAC7BC,EAEAiF,EACAwJ,EAFAxO,EAAWwE,EAAS,eAQTkB,WACJzF,EAAI,EAAGE,EAAIJ,EAAMK,OAAQH,EAAIE,IAAKF,EAAG,KACxCC,EAAOH,EAAME,GACbsH,EAAKrH,EAAKK,EAAIV,GAAK,KACnB2H,EAAKtH,EAAKM,EAAIV,GAAK,KACnBqE,EAAIG,KAAKC,KAAKgD,EAAKA,EAAKC,EAAKA,GAC7B7D,KAAc1D,GAAKkE,GAAKa,EAAU/E,GAAKyF,EAAQvB,IAC9CjB,IAAMqE,EAAK5D,IACXR,IAAMqE,EAAK7D,mBAKb5D,OACDE,EAAGE,EAAIJ,EAAMK,aACL,IAAImC,MAAMpC,KACX,IAAIoC,MAAMpC,GAChBF,EAAI,EAAGA,EAAIE,IAAKF,IACVA,IAAMmD,EAAOrD,EAAME,GAAIA,EAAGF,KACzBE,GAAKc,MAAMyN,EAASvO,IAAM,GAAKD,EAASD,EAAME,GAAIA,EAAGF,UAvB7C,mBAAXqD,MAAgCoB,GAAUpB,IAC5C,MAALvD,MAAe,GACV,MAALC,MAAe,KAyBbW,WAAa,SAASC,KAClBA,EAAGD,OAGPT,SAAW,SAASU,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASZ,KAGrGoD,OAAS,SAAS1C,UACfC,UAAUP,UAAgC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASwC,KAGnG7C,EAAI,SAASG,UACVC,UAAUP,WAAeM,EAAGE,GAASf,KAGxCW,EAAI,SAASE,UACVC,UAAUP,WAAeM,EAAGE,GAASd,GAGvCc,qCCrDef,OAElBE,EACAiF,EACA0B,EAHA1G,EAAWwE,EAAS,eAOTkB,WACqBxF,EAAzBD,EAAI,EAAGE,EAAIJ,EAAMK,OAAcH,EAAIE,IAAKF,KACxCF,EAAME,IAASiD,OAAUjD,GAAKC,EAAKK,GAAKyE,EAAU/E,GAAKyF,kBAK3D3F,OACDE,EAAGE,EAAIJ,EAAMK,aACL,IAAImC,MAAMpC,KACjB,IAAIoC,MAAMpC,GACVF,EAAI,EAAGA,EAAIE,IAAKF,IACTA,GAAKc,MAAM2F,EAAGzG,IAAMJ,EAAEE,EAAME,GAAIA,EAAGF,IAAU,GAAKC,EAASD,EAAME,GAAIA,EAAGF,UAdrE,mBAANF,MAAsB2E,EAAc,MAAL3E,EAAY,GAAKA,MAkBrDY,WAAa,SAASC,KAClBA,SAIJV,SAAW,SAASU,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASZ,KAGrGO,EAAI,SAASG,UACVC,UAAUP,UAA2B,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASf,GAG7Fe,mBCrCed,OAElBC,EACAiF,EACA2B,EAHA3G,EAAWwE,EAAS,eAOTkB,WACqBxF,EAAzBD,EAAI,EAAGE,EAAIJ,EAAMK,OAAcH,EAAIE,IAAKF,KACxCF,EAAME,IAASkD,OAAUlD,GAAKC,EAAKM,GAAKwE,EAAU/E,GAAKyF,kBAK3D3F,OACDE,EAAGE,EAAIJ,EAAMK,aACL,IAAImC,MAAMpC,KACjB,IAAIoC,MAAMpC,GACVF,EAAI,EAAGA,EAAIE,IAAKF,IACTA,GAAKc,MAAM4F,EAAG1G,IAAMH,EAAEC,EAAME,GAAIA,EAAGF,IAAU,GAAKC,EAASD,EAAME,GAAIA,EAAGF,UAdrE,mBAAND,MAAsB0E,EAAc,MAAL1E,EAAY,GAAKA,MAkBrDW,WAAa,SAASC,KAClBA,SAIJV,SAAW,SAASU,UACjBC,UAAUP,UAAkC,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASZ,KAGrGQ,EAAI,SAASE,UACVC,UAAUP,UAA2B,mBAANM,EAAmBA,EAAI8D,GAAU9D,GAAID,IAAcG,GAASd,GAG7Fc,yBCPPsI,YAAoBuF,EAAiC,mBAErDC,SAASC,SACDC,QAAEA,QAAS7O,QAAO8O,UAAOC,aAASC,GAAeJ,MACnDK,YAAEA,gBAAaC,GAAkB7I,KAAK8I,iBAAiBnP,EAAMmI,MAAO0G,EAAS,CAAErO,EAAG,EAAGC,EAAG,UAEtF4L,EAAahG,KAAK+I,iBAAiBH,EAAa5I,KAAKgJ,iBAAiBP,EAAM3G,UACvEiB,GAAG,QAAQ,uBACTjJ,KAAQ8O,EAAa,OACxBK,QAAST,WAAU1O,EAAKkF,IAC1BiK,MACK9O,EAAI,WAAKA,KAAK,IACdC,EAAI,WAAKA,KAAK,aAKrB8O,EAAoB,OACb5J,MAAM,IAAKwF,WAGlBqE,gBACQnK,EAAIoK,KAAQC,OAAOC,QAAQC,GAAY,OAC3CC,EAAUX,EAAc7J,KACtB6H,GAAKuC,EAAIjP,IACT2M,GAAKsC,EAAIhP,OAKfqP,sBACQzK,EAAIoK,KAAQC,OAAOC,QAAQC,GAAY,OAC3CN,EAASjJ,KAAK0J,cAAclB,EAASxJ,GACrCwK,EAAkC,0BAAgBxK,MAAO,CAAE7E,EAAG,EAAGC,EAAG,GACtE6O,EAAOnH,MAAM6H,OAAS3J,KAAKqI,QAAQuB,uBAC7B/C,GAAKuC,EAAIjP,IACT2M,GAAKsC,EAAIhP,IACV0H,MAAM6H,OAAQ,MAEbxP,EAAIiP,EAAIjP,IACRC,EAAIgP,EAAIhP,SACToP,EAAQ3C,UACR2C,EAAQ1C,SAMf+C,EAA0B,EAAG/P,KAAAA,EAAM2M,MAAAA,SACnCzG,KAAKqI,QAAQyB,gCAAkCrD,EAAMsD,OAAQ,OACzDd,EAASjJ,KAAK0J,cAAclB,EAAS1O,OACvC0P,QAAsCX,WAAgB/O,GACrD0P,MACO,CAAExK,GAAIlF,EAAMK,EAAG,EAAGC,EAAG,KACjBN,GAAQ0P,GAGpBP,EAAOnH,MAAM6H,cAERV,EAAOnH,MAAM6H,QACZxP,EAAIqP,EAAQ3C,IAAM2C,EAAQrP,IAC1BC,EAAIoP,EAAQ1C,IAAM0C,EAAQpP,SAC3BoP,EAAQ3C,UACR2C,EAAQ1C,OAGRhF,MAAM6H,OAAQ,IACb9C,GAAK2C,EAAQrP,IACb2M,GAAK0C,EAAQpP,SAMrB4P,EAAmBC,SACvB,IAAM,CACJZ,OAAOa,KAAKvQ,EAAMmI,OAElBuH,OAAOc,OAAO1B,EAAM3G,OAAOpC,QAAS,GAAGqF,EAAE5F,UAAU4F,EAAE3F,cAEvD,WAEQgL,EAAOzB,EAAW0B,gBACpBzB,YAAAA,EAAaC,cAAAA,GAAkB7I,KAAK8I,iBAAiBnP,EAAMmI,MAAO0G,EAAS4B,EAAKE,WACzE3Q,MAAMiP,SACX2B,EAAavE,EAAWxL,MAAoD,QAC9E+P,KACS5L,MAAMqB,KAAKgJ,iBAAiBP,EAAM3G,iBAM3CiB,GAAG,iBAAkBoG,KACrBpG,GAAG,mBAAoBoG,KACvBpG,GAAG,eAAgB0G,KACnB1G,GAAG,aAAc8G,QAEpBW,aAAe,OACP5E,aAEH6E,IAAI,iBAAkBtB,KACtBsB,IAAI,mBAAoBtB,KACxBsB,IAAI,eAAgBhB,KACpBgB,IAAI,aAAcZ,IAI9Ba,aACM1K,KAAKwK,mBACFA,eAIDzB,iBACNpP,EACA8O,MAEIzI,KAAKqI,QAAQU,wBACR/I,KAAKqI,QAAQU,iBAAiB4B,EAAIhR,EAAO8O,GAC3C,OACCmC,EAAYC,EAA6CpC,GAAOzJ,OAAQtE,EAAEsE,YACzE8L,EACYnR,GAChBa,MAAM,OAAQoQ,EAAUvL,SAAS,MACjC7E,MAAM,SAAUuQ,KAChBvQ,MAAM,UAAWwQ,EAAgB,IAAIpR,SAAS,KAC9CY,MAAM,SAAUyQ,IAAiBrR,SAAS,MAC1CqM,SAAS,OAIR6C,iBAAiBnP,EAAwB6O,EAAwB0C,SACjEC,EAAW9B,OAAOa,KAAKvQ,GAAOyR,kBAAmB5C,eAC5ChK,KAAU2M,IACX3M,GAAU6M,kBAAKH,SAGnBtC,EAAc5I,KAAKsL,iBAAiB9C,GACpCK,EAAgBQ,OAAOkC,YAAY3C,EAAYlJ,QAAS,CAAC3F,EAAEiF,GAAIjF,YAC9D,CAAE6O,YAAAA,EAAaC,cAAAA,GAGhByC,iBAAiB9C,UAChBa,OAAOC,QAAQd,GAAS9I,KAAI,EAAEV,EAAIwM,KAChCA,EAAE7B,MAAQ8B,8BAAEzM,GAAAA,GAAOwM,GAAT,CAAY3E,GAAI2E,EAAErR,EAAG2M,GAAI0E,EAAEpR,IAAMiR,gBAAErM,GAAAA,GAAOwM,KAIvDxC,iBAAiBP,UAGhBY,OAAOc,OAAO1B,GAAO/I,UAC1BP,OAAQqM,EAAErM,OACVC,OAAQoM,EAAEpM,WAINsK,cAAclB,EAAwB1O,SACtCmP,EAASyC,QAAMlD,EAAS1O,UACzBmP,EAAOnH,UACHA,MAAQ,CAAE3H,EAAG,EAAGC,EAAG,IAErB6O"}