{"version":3,"file":"force-layout.mjs","sources":["../node_modules/d3-force/src/center.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/lcg.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../src/layouts/force.ts"],"sourcesContent":["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { toRef, watch } from \"vue\"\nimport { Edges, NodePositions, Nodes, Position } from \"@/common/types\"\nimport { OnClickHandler, OnDragHandler } from \"@/common/types\"\nimport { LayoutActivateParameters, LayoutHandler } from \"./handler\"\nimport * as d3 from \"d3-force\"\n\nexport interface ForceNodeDatum extends d3.SimulationNodeDatum {\n  id: string\n}\n\nexport interface ForceEdgeDatum {\n  source: string\n  target: string\n}\n\ntype d3Type = typeof d3\n\ntype CreateSimulationFunction = (\n  d3: d3Type,\n  nodes: ForceNodeDatum[],\n  edges: ForceEdgeDatum[]\n) => d3.Simulation<ForceNodeDatum, ForceEdgeDatum>\n\nexport type ForceLayoutParameters = {\n  positionFixedByDrag?: boolean\n  positionFixedByClickWithAltKey?: boolean\n  createSimulation?: CreateSimulationFunction\n}\n\nexport class ForceLayout implements LayoutHandler {\n  private onDeactivate?: () => void\n\n  constructor(private options: ForceLayoutParameters = {}) {}\n\n  activate(parameters: LayoutActivateParameters): void {\n    const { layouts, nodes, edges, emitter, svgPanZoom } = parameters\n    let { nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, layouts, { x: 0, y: 0 })\n\n    const simulation = this.createSimulation(nodeLayouts, this.forceLayoutEdges(edges.value))\n    simulation.on(\"tick\", () => {\n      for (const node of nodeLayouts) {\n        const layout = layouts?.[node.id]\n        if (layout) {\n          layout.x = node.x ?? 0\n          layout.y = node.y ?? 0\n        }\n      }\n    })\n\n    const restartSimulation = () => {\n      simulation.alpha(0.1).restart()\n    }\n\n    const onDrag: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id]\n        nodePos.fx = pos.x\n        nodePos.fy = pos.y\n      }\n      restartSimulation()\n    }\n\n    const onDragEnd: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(layouts, id)\n        const nodePos: d3.SimulationNodeDatum = nodeLayoutMap?.[id] ?? { x: 0, y: 0 }\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x\n          nodePos.fy = pos.y\n          layout.value.fixed = true\n        } else {\n          nodePos.x = pos.x\n          nodePos.y = pos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        }\n      }\n      restartSimulation()\n    }\n\n    const onClick: OnClickHandler = ({ node, event }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(layouts, node)\n        let nodePos: ForceNodeDatum | undefined = nodeLayoutMap?.[node]\n        if (!nodePos) {\n          nodePos = { id: node, x: 0, y: 0 }\n          nodeLayoutMap[node] = nodePos\n        }\n\n        if (layout.value.fixed) {\n          // unfix\n          delete layout.value.fixed\n          nodePos.x = nodePos.fx || nodePos.x\n          nodePos.y = nodePos.fy || nodePos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        } else {\n          // fix\n          layout.value.fixed = true\n          nodePos.fx = nodePos.x\n          nodePos.fy = nodePos.y\n        }\n        restartSimulation()\n      }\n    }\n\n    const stopNetworkWatch = watch(\n      () => [\n        Object.keys(nodes.value),\n        // Watch only for changes in links, not all properties of the edge objects.\n        Object.values(edges.value).map(e => `${e.source}=${e.target}`),\n      ],\n      () => {\n        // set new node's position to center of the view\n        const area = svgPanZoom.getViewArea()\n        ;({ nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, layouts, area.center))\n        simulation.nodes(nodeLayouts)\n        const forceEdges = simulation.force<d3.ForceLink<ForceNodeDatum, ForceEdgeDatum>>(\"edge\")\n        if (forceEdges) {\n          forceEdges.links(this.forceLayoutEdges(edges.value))\n        }\n        restartSimulation()\n      }\n    )\n\n    emitter.on(\"node:dragstart\", onDrag)\n    emitter.on(\"node:pointermove\", onDrag)\n    emitter.on(\"node:dragend\", onDragEnd)\n    emitter.on(\"node:click\", onClick)\n\n    this.onDeactivate = () => {\n      simulation.stop()\n      stopNetworkWatch()\n      emitter.off(\"node:dragstart\", onDrag)\n      emitter.off(\"node:pointermove\", onDrag)\n      emitter.off(\"node:dragend\", onDragEnd)\n      emitter.off(\"node:click\", onClick)\n    }\n  }\n\n  deactivate(): void {\n    if (this.onDeactivate) {\n      this.onDeactivate()\n    }\n  }\n\n  private createSimulation(\n    nodes: ForceNodeDatum[],\n    edges: ForceEdgeDatum[]\n  ): d3.Simulation<ForceNodeDatum, ForceEdgeDatum> {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges)\n    } else {\n      const forceLink = d3.forceLink<ForceNodeDatum, ForceEdgeDatum>(edges).id(d => d.id)\n      return d3\n        .forceSimulation(nodes)\n        .force(\"edge\", forceLink.distance(100))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide(50).strength(0.2))\n        .force(\"center\", d3.forceCenter().strength(0.05))\n        .alphaMin(0.001)\n    }\n  }\n\n  private buildNodeLayouts(nodes: Readonly<Nodes>, layouts: NodePositions, newPosition: Position) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in layouts))\n    for (const nodeId of newNodes) {\n      layouts[nodeId] = { ...newPosition }\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(layouts)\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]))\n    return { nodeLayouts, nodeLayoutMap }\n  }\n\n  private forceNodeLayouts(layouts: NodePositions): ForceNodeDatum[] {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? { id, ...v, fx: v.x, fy: v.y } : { id, ...v }\n    })\n  }\n\n  private forceLayoutEdges(edges: Edges): ForceEdgeDatum[] {\n    // d3-force replaces the source/target in the edge with NodeDatum\n    // objects, so build own link objects.\n    return Object.values(edges).map(v => ({\n      source: v.source,\n      target: v.target,\n    }))\n  }\n\n  private getNodeLayout(layouts: NodePositions, node: string) {\n    const layout = toRef(layouts, node)\n    if (!layout.value) {\n      layout.value = { x: 0, y: 0 }\n    }\n    return layout\n  }\n}\n"],"names":["tree_addAll","tree_removeAll","x","y","d3.forceLink","d3.forceSimulation","d3.forceManyBody","d3.forceCollide","d3.forceCenter"],"mappings":"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"}